// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

  def kotlin = "org.jetbrains.kotlin:kotlin"
  def fabric = "io.fabric.tools:gradle"
  def android_plugin = "com.android.tools.build:gradle"
  def google_services = "com.google.gms:google-services"

  ext.kotlin_version = "1.3.21"

  repositories {
    jcenter()
    google()
    maven { url "https://maven.fabric.io/public" }
    mavenCentral()
  }
  dependencies {
    classpath "${android_plugin}:3.3.2"
    classpath "${google_services}:4.2.0"
    classpath "$kotlin-gradle-plugin:${kotlin_version}"
    classpath "$kotlin-android-extensions:${kotlin_version}"
    classpath "${fabric}:1.28.1"

    // NOTE: Do not place your application dependencies here; they belong
    // in the individual module build.gradle files
  }
}

allprojects {
  repositories {
    jcenter()
    mavenCentral()
    google()
    maven { url "https://jitpack.io" }
    maven { url "https://maven.google.com" }
    maven { url "http://sdk.uxcam.com/android/" }
    maven { url "https://maven.fabric.io/public" }
  }
}

task clean(type: Delete) {
  delete rootProject.buildDir
}

def archiveArtifact(String modName) {
  def baseSpec = copySpec {}
  copy {
    from("./${modName}/build/outputs/aar/")
    include "${modName}-slim-debug.aar"
    into("./base_app/cached_libs/")
    rename "${modName}-slim-debug.aar", "${modName}.aar"
    with baseSpec
  }
}

def archiveArtifact(String modName, String suffix) {
  def baseSpec = copySpec {}
  copy {
    from("./${modName}/build/outputs/aar/")
    //include "${modName}-slim-debug.aar"
    include "${modName}-${suffix}.aar"
    into("./base_app/cached_libs/")
    rename "${modName}-${suffix}.aar", "${modName}.aar"
    with baseSpec
  }
}

def archiveArtifactTo(String modName, String dest_module) {
  def baseSpec = copySpec {}
  copy {
    from("./${modName}/build/outputs/aar/")
    include "${modName}-slim-debug.aar"
    into("./${dest_module}/cached_libs/")
    rename "${modName}-slim-debug.aar", "${modName}.aar"
    with baseSpec
  }
}

def archiveArtifactTo(String modName, String suffix, String dest_module) {
  def baseSpec = copySpec {}
  copy {
    from("./${modName}/build/outputs/aar/")
    include "${modName}-slim-debug.aar"
    into("./${dest_module}/cached_libs/")
    rename "${modName}-slim-debug.aar", "${modName}.aar"
    with baseSpec
  }
}

